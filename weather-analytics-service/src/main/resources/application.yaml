spring:
  application:
    name: weather-analytics-service
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      acks: all
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        enable.idempotence: true
        schema.registry.url: http://localhost:8081
        auto.register.schemas: true
        use.latest.version: true
    consumer:
      group-id: analytics-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
        auto.offset.reset: earliest
    listener:
      missing-topics-fatal: false
      ack-mode: record
  data:
    mongodb:
      database: weather-analytics
      host: localhost
      port: 27017
      username: weatheranalyticsservice
      password: weatheranalyticsservice
      authentication-database: admin

kafka:
  weather:
    topic:
      raw: weather.raw
      hot-weather: weather.hot
